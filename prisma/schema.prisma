// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  email        String         @unique
  password     String
  name         String
  role         String
  active       Boolean        @default(false)
  create_at    DateTime       @default(now())
  update_at    DateTime       @updatedAt
  client       Client[]
  professional Professional[]
  credenciais  Credenciais[]
  adm          Adm[]
}

model Adm {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  cpf       String?
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  create_at DateTime @default(now())
  update_at DateTime @updatedAt
}

model Professional {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  cpf       String    @unique
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  create_at DateTime  @default(now())
  update_at DateTime  @updatedAt
  services  Service[]
}

model Client {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  cpf       String    @unique
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  create_at DateTime  @default(now())
  update_at DateTime  @updatedAt
  services  Service[]
}

model Service {
  id             Int          @id @default(autoincrement())
  name           String
  description    String?
  price          Float
  duration       Int
  professionalId Int
  professional   Professional @relation(fields: [professionalId], references: [id])
  clientId       Int
  client         Client       @relation(fields: [clientId], references: [id])
  create_at      DateTime     @default(now())
  update_at      DateTime     @updatedAt
}

model Credenciais {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  create_at DateTime @default(now())
  update_at DateTime @updatedAt
}
