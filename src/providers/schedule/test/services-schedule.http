### Variáveis
@baseUrl = http://127.0.0.1:58055/v1
@authToken = seu_token_jwt_aqui


POST {{baseUrl}}/schedule
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
    "dateTime": "2024-01-20T10:00:00Z",
    "professionalId": 3,
    "servicesId": [13],
    "clientInfo": {
        "name": "João Silva",
        "email": "joao@email.com",
        "phone": "11999999999",
        "phoneCountry": "+55"
    },
    "payment": {
        "amount": 100.00,
        "method": "visa_card",
        "cardName": "JOAO SILVA",
        "cardNumber": "4242424242424242",
        "cardExpiry": "12/25",
        "cardCvv": "123"
    }
}

### Listar todos os agendamentos
GET {{baseUrl}}/schedule
Authorization: Bearer {{authToken}}

### Buscar agendamento por ID
GET {{baseUrl}}/schedule/1
Authorization: Bearer {{authToken}}

### Atualizar agendamento
PATCH {{baseUrl}}/schedule/1
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
    "status": "confirmed"
}

### Cancelar agendamento
DELETE {{baseUrl}}/schedule/1
Authorization: Bearer {{authToken}}

### Pagamentos

# Criar novo pagamento
POST {{baseUrl}}/payments
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
    "amount": 50.00,
    "method": "CARD",
    "cardName": "JOAO SILVA",
    "cardNumber": "4242424242424242",
    "cardExpiry": "12/25",
    "cardCvv": "123"
}

### Listar todos os pagamentos
GET {{baseUrl}}/payments
Authorization: Bearer {{authToken}}

### Buscar pagamento por ID
GET {{baseUrl}}/payments/1
Authorization: Bearer {{authToken}}

### Exemplos de Cenários de Erro

# Tentar criar serviço com nome duplicado
POST {{baseUrl}}/services
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
    "name": "Corte de Cabelo Masculino",
    "description": "Tentativa de criar serviço com nome duplicado",
    "price": 45.00,
    "duration": 30,
    "profissionalId": 1
}

# Tentar agendar horário já ocupado
POST {{baseUrl}}/schedule
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
    "dateTime": "2024-01-20T10:00:00Z",
    "professionalId": 1,
    "servicesId": [1],
    "clientInfo": {
        "name": "João Silva",
        "email": "joao@email.com",
        "phone": "11999999999",
        "phoneCountry": "+55"
    },
    "payment": {
        "amount": 100.00,
        "method": "CARD",
        "cardName": "JOAO SILVA",
        "cardNumber": "4242424242424242",
        "cardExpiry": "12/25",
        "cardCvv": "123"
    }
}

# Tentar criar pagamento para serviço inexistente
POST {{baseUrl}}/payments
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
    "amount": 50.00,
    "method": "CARD",
    "cardName": "JOAO SILVA",
    "cardNumber": "4242424242424242",
    "cardExpiry": "12/25",
    "cardCvv": "123",
    "serviceId": 999
}
